/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ssh.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import java.util.List;

import com.ssh.DAO.UserDAO;
import com.ssh.POJO.User;
import com.ssh.common.Global;
import com.ssh.struts.form.LoginForm;

/** 
 * MyEclipse Struts
 * Creation date: 08-01-2018
 * 
 * XDoclet definition:
 * @struts.action path="/login" name="loginForm" input="/jsp/login.jsp" scope="request" validate="true"
 */
public class LoginAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		LoginForm loginForm = (LoginForm) form;// TODO Auto-generated method stub
		String username = loginForm.getUsername();
		String password = loginForm.getPassword();
		
		// ClassPathXmlApplicationContext beans = new ClassPathXmlApplicationContext("../applicationContext.xml");
	    //   System.out.println(beans);
		User user = new User();
		user.setUsername(username);
		user.setPassword(password);
		UserDAO userDAO = (UserDAO)Global.getBean("UserDAO");
		List<?> list =  userDAO.findByExample(user);
		 //濡傛灉鐢ㄦ埛瀛樺湪,鍒欑櫥褰曟垚鍔熴��
        if(( list).size() > 0){
        	user = (User)list.get(0);
            String nickname = user.getNickname();
            //鍐欏叆鎻愮ず淇℃伅
            request.setAttribute("message", "鎮ㄧ殑鏄电О涓�:" + nickname);
            return mapping.findForward("loginSuccess");
        }
       
        //涓嶅尮閰�,璺宠浆鍒扮櫥褰曞け璐ラ〉
        return mapping.findForward("loginFail");		
				
		/**
		if("wdk".equals(username) && "123".equals(password)){
			return mapping.findForward("loginSuccess");
		}
		return mapping.findForward("loginFail");
		*/
	}
}