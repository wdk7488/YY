/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ssh.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;

import com.ssh.POJO.Genealogy;
import com.ssh.service.GenealogyService;
import com.ssh.struts.form.SearchGenealogyForm;

/** 
 * MyEclipse Struts
 * Creation date: 09-21-2018
 * 
 * XDoclet definition:
 * @struts.action path="/searchGenealogy" name="searchGenealogyForm" input="/jsp/searchGenealogy.jsp" scope="request" validate="true"
 */

@Controller("/searchGenealogy")
public class SearchGenealogyAction extends Action {
	/*
	 * Generated Methods
	 */
	private Logger log = LoggerFactory.getLogger(SearchPandaAction.class);
	
	@Autowired
	@Qualifier("genealogyService")
	private GenealogyService genealogyService;
	
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		SearchGenealogyForm searchGenealogyForm = (SearchGenealogyForm) form;// TODO Auto-generated method stub
		String zid = searchGenealogyForm.getZid();
		Integer userId = searchGenealogyForm.getUserId();
		String sheetName = searchGenealogyForm.getSheetName();
		String name = searchGenealogyForm.getName();
		String father = searchGenealogyForm.getFather();
		String mother = searchGenealogyForm.getMother();
		//经过表单的数据 字符串为空=""  Integer为空，设置为0，  
		
		if(null == userId || userId == 0){
			log.info("userId is null 使用1代替");
			userId = 1;
		}
		Genealogy genealogy = new Genealogy(zid,userId,sheetName,name,father,mother);
		
		List<Genealogy> list = genealogyService.getGenealogys(genealogy);
		
		if(null == list || list.size() == 0){
			request.setAttribute("notnull", 0);
		}
		else{
			request.setAttribute("notnull", 1);
			request.setAttribute("list", list);
		}
		return mapping.findForward("searchGenealogy");
	}
}