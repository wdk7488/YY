/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ssh.struts.action;

import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;

import com.ssh.POJO.Characteristics;
import com.ssh.POJO.Genealogy;
import com.ssh.POJO.Pandacharacter;
import com.ssh.POJO.PandacharacterId;
import com.ssh.common.DateUtil;
import com.ssh.common.MessageAndFlag;
import com.ssh.service.GenealogyService;
import com.ssh.service.PandaCharacterService;
import com.ssh.struts.form.ModifyGenealogyForm;

/** 
 * MyEclipse Struts
 * Creation date: 09-21-2018
 * 
 * XDoclet definition:
 * @struts.action path="/addGenealogy" name="addGenealogyForm" input="/form/addGenealogy.jsp" scope="request" validate="true"
 * @struts.action-forward name="searchGenealogy" path="/jsp/searchGenealogy.jsp"
 */

@Controller("/addCharacter")
public class AddCharacterAction extends Action {
	/*
	 * Generated Methods
	 */

	Logger log = LoggerFactory.getLogger(AddCharacterAction.class);
	
	@Autowired
	@Qualifier("pandaCharacterService")
	private PandaCharacterService pandaCharacterService;
	
	
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		String zid = request.getParameter("zid")+"";
		String character = request.getParameter("character")+"";
		
		
		try {
			character = new String(character.getBytes("ISO8859-1"), "UTF-8");
		} catch (UnsupportedEncodingException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}	
		
		//如果用request.getAttribute获取的值为"null"  此判断无效
		if(null == zid || character == null){
			return mapping.findForward("searchPanda");
		}
		Integer zidI = null;
		try {
			zidI = Integer.valueOf(zid);
		} catch (NumberFormatException e) {
			// TODO: handle exception
			request.setAttribute("message", "id转化错误，必须为数字格式");
			return mapping.findForward("searchPanda");
		}
		
		
		
		Characteristics characteristics = new Characteristics(character);
		PandacharacterId pandaCharacterId = new PandacharacterId(zidI, null);
		Pandacharacter pandaCharacter = new Pandacharacter(pandaCharacterId);
		
		
		
		MessageAndFlag mf = pandaCharacterService.save(characteristics, pandaCharacter);
		//request.setAttribute("message", mf.getMessage());
		if(mf.isFlag()){
			
			log.info("add characteristics success+"+mf.getMessage());
			String path = "/showPandaDetail.do"+"?zid="+zid;
			
			//ActionForward actionForward = mapping.findForward("showPandaDetail");
			
			
			
			//setPath会报错
			//actionForward.setPath(path);
			ActionForward actionForward = new ActionForward(path);
			return actionForward;
			
		}
		
		//以后改为本页
		log.info("add characteristics fail:"+mf.getMessage());
		return mapping.findForward("searchPanda");
		
		
		
	}
}