/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ssh.struts.action;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONArray;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;

import com.ssh.POJO.Genealogy;
import com.ssh.POJO.Panda;
import com.ssh.common.MessageAndFlag;
import com.ssh.service.GenealogyService;
import com.ssh.service.PandaCharacterService;
import com.ssh.struts.form.ModifyGenealogyForm;

/** 
 * MyEclipse Struts
 * Creation date: 09-21-2018
 * 
 * XDoclet definition:
 * @struts.action path="/modifyGenealogy" name="modifyGenealogyForm" input="/jsp/modifyGenealogy.jsp" scope="request" validate="true"
 * @struts.action-forward name="searchGenealogy" path="/jsp/searchGenealogy.jsp"
 */
@Controller("/getCharacterList")
public class GetCharacterListAction extends Action {
	/*
	 * Generated Methods
	 */
	
	Logger log = LoggerFactory.getLogger(GetCharacterListAction.class);
	
	@Autowired
	@Qualifier("pandaCharacterService")
	private PandaCharacterService pandaCharacterService;
	
	
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ModifyGenealogyForm genealogyForm = (ModifyGenealogyForm) form;// TODO Auto-generated method stub
		String zid = request.getParameter("zid");
		
		
		List list = pandaCharacterService.getListByZid(zid);
		if(null != list && list.size() !=0){
			JSONArray jsonA = JSONArray.fromObject(list);
			log.info(jsonA.toString());
			try {
				response.getWriter().write(jsonA.toString());
				response.getWriter().flush();
				response.getWriter().close();
			} catch (IOException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			
		}
		
		return null;
	}
}